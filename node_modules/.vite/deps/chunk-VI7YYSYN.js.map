{
  "version": 3,
  "sources": ["../../invariant/browser.js", "../../@toolpad/core/esm/shared/context.js"],
  "sourcesContent": ["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n", "'use client';\n\nimport * as React from 'react';\nexport const BrandingContext = /*#__PURE__*/React.createContext(null);\nexport const NavigationContext = /*#__PURE__*/React.createContext([]);\nexport const PaletteModeContext = /*#__PURE__*/React.createContext({\n  paletteMode: 'light',\n  setPaletteMode: () => {},\n  isDualTheme: false\n});\nexport const RouterContext = /*#__PURE__*/React.createContext(null);\nexport const WindowContext = /*#__PURE__*/React.createContext(undefined);\nexport const CrudContext = /*#__PURE__*/React.createContext({\n  dataSource: null,\n  dataSourceCache: null\n});"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAoBA,QAAI,YAAY,SAAS,WAAW,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC5D,UAAI,MAAuC;AACzC,YAAI,WAAW,QAAW;AACxB,gBAAM,IAAI,MAAM,8CAA8C;AAAA,QAChE;AAAA,MACF;AAEA,UAAI,CAAC,WAAW;AACd,YAAI;AACJ,YAAI,WAAW,QAAW;AACxB,kBAAQ,IAAI;AAAA,YACV;AAAA,UAEF;AAAA,QACF,OAAO;AACL,cAAI,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC5B,cAAI,WAAW;AACf,kBAAQ,IAAI;AAAA,YACV,OAAO,QAAQ,OAAO,WAAW;AAAE,qBAAO,KAAK,UAAU;AAAA,YAAG,CAAC;AAAA,UAC/D;AACA,gBAAM,OAAO;AAAA,QACf;AAEA,cAAM,cAAc;AACpB,cAAM;AAAA,MACR;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC9CjB,YAAuB;AAChB,IAAM,kBAAqC,oBAAc,IAAI;AAC7D,IAAM,oBAAuC,oBAAc,CAAC,CAAC;AAC7D,IAAM,qBAAwC,oBAAc;AAAA,EACjE,aAAa;AAAA,EACb,gBAAgB,MAAM;AAAA,EAAC;AAAA,EACvB,aAAa;AACf,CAAC;AACM,IAAM,gBAAmC,oBAAc,IAAI;AAC3D,IAAM,gBAAmC,oBAAc,MAAS;AAChE,IAAM,cAAiC,oBAAc;AAAA,EAC1D,YAAY;AAAA,EACZ,iBAAiB;AACnB,CAAC;",
  "names": []
}
